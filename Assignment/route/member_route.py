from app import *
from make_app.css import*
import config
@rt('/coupons')
def get():
    coupon_lst = OrangeIT.get_coupon_lst()
    return Style(coupon_css), Div(
        Div(A(H1("ORANGE", cls="header-title"), href='/'), cls="header-container"),
        
        Div(
            H2("üéâ ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ñ‡∏π‡∏õ‡∏≠‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î"),
            Table(
                Thead(
                    Tr(
                        Th("‡∏£‡∏´‡∏±‡∏™‡∏Ñ‡∏π‡∏õ‡∏≠‡∏á"), 
                        Th("‡∏ä‡∏∑‡πà‡∏≠"), 
                        Th("‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î"),
                        Th('‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏')
                    )
                ),
                Tbody(
                    *[Tr(Td(c.get_code()), Td(c.get_name()), Td(c.get_discount()),Td(c.get_expire())) for c in coupon_lst]
                ),
                cls="coupon-table"
            ),
            cls="coupon-section"
        ),

        Div(P("¬© 2025 OrAnGe Store | All Rights Reserved.", cls="footer"), cls="container")
    )
    
#view_cart
@rt('/view_cart')
def get():
    if not config.account_now:
        return Style(error_css),Div(P("account Not Found", cls="error-message"),cls="error-box")
    
    temp_acc = OrangeIT.search_acc_by_id(config.account_now)
    cart = temp_acc.get_cart_shopping()
    total_price = cart.get_price_total()
    cart_items = cart.get_cart_lst()
    total_quantity = sum(item.get_quantity() for item in cart_items)

    return Div(
        H1(f'üõí ‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ ({total_quantity})', cls='cart-header'),
        Table(
            Tr(Th("‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"), Th("‡∏à‡∏≥‡∏ô‡∏ß‡∏ô"), Th("‡∏£‡∏≤‡∏Ñ‡∏≤"), Th("‡∏•‡∏ö")),
            *[
                Tr(
                    Td(item.get_product().get_name()),
                    Td(
                        Div(
                            Button("-", cls="qty-btn", hx_post=f"/update_cart/{item.get_id()}/decrease", hx_target="#cart"),
                            Span(item.get_quantity(), cls="qty-span"),
                            Button("+", cls="qty-btn", hx_post=f"/update_cart/{item.get_id()}/increase", hx_target="#cart"),
                            cls="qty-container"
                        )
                    ),
                    Td(f"‡∏ø{item.get_price_product() * item.get_quantity()}"),
                    Td(Button("‚ùå", cls="delete-btn", hx_post=f"/remove_cart/{item.get_id()}", hx_target="#cart"))
                )
                for item in cart_items
            ],
            cls="cart-table"
        ) if total_quantity > 0 else P("‚ùå ‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ß‡πà‡∏≤‡∏á ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏Å‡πà‡∏≠‡∏ô‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠", cls="cart-empty-msg"),
        P(f"‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°: ‡∏ø{total_price}", cls="total-price"),
        Form(Button("‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠", cls="checkout-btn", type="submit", disabled=(total_quantity == 0)), action="/checkout"),
        Style(view_cart_css),
        id="cart"
    )

@rt('/update_cart/{product_id}/{action}')
def post(product_id: int, action: str):
    if not config.account_now:
        return Style(error_css),Div(P("account Not Found", cls="error-message"),cls="error-box")
    
    if action == "increase":
        OrangeIT.update_cart_quantity(config.account_now, product_id, 1)
    elif action == "decrease":
        OrangeIT.update_cart_quantity(config.account_now, product_id, -1)

    return Redirect('/view_cart')

@rt('/remove_cart/{product_id}')
def post(product_id: int):
    if not config.account_now:
        return Style(error_css),Div(P("account Not Found", cls="error-message"),cls="error-box")
    
    OrangeIT.remove_cartitem_by_id(config.account_now, product_id)

    return Redirect('/view_cart')

@rt('/checkout')
def checkout():
    if not config.account_now:
        return Style(error_css),Div(P("Account Not Found", cls="error-message"),cls="error-box")

    temp_acc = OrangeIT.search_acc_by_id(config.account_now)
    cartitems_lst = temp_acc.get_cart_shopping().get_cart_lst()
    total_price = temp_acc.get_cart_shopping().get_price_total()

    return Head(
        Div(Style(checkout_css), 
            Div(
                A(H1("OrAnGeIT", cls="header-title"), href='/'),  # ‡πÇ‡∏•‡πÇ‡∏Å‡πâ
                cls="header-container"
            )
        ),
        H2('Checkout', _class='checkout-title'),
        Div(
            Style(checkout_css),
            Form(
                H3("Shipping Address", _class="form-title"),
                Input(Id='full_name', type='text', name='full_name', placeholder='Full Name', required=True),
                Input(Id='address', type='text', name='address', placeholder='Address', required=True),
                Input(Id='city', type='text', name='city', placeholder='City', required=True),
                Input(Id='postal_code', type='text', name='postal_code', placeholder='Postal Code', required=True),
                Input(Id='phone', type='tel', name='phone', placeholder='Phone Number', required=True),

                # ‚úÖ ‡∏Ñ‡∏π‡∏õ‡∏≠‡∏á
                Input(Id='coupon', type='text', name='coupon', placeholder='Coupon Code'),
                Button("Use Code", hx_post="/use_coupon/", hx_target="#total_prices", hx_include="[name='coupon']", _class="coupon-btn"),

                P(f"Total: ‡∏ø{total_price}", Id="total_prices", _class="total-price"),  # ‚úÖ ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î

                Button('Proceed to Payment', type='submit', _class='checkout-btn'),
                action='/payment', method='post',
                _class='checkout-form'
            ),
            _class='checkout-container', style="align-items: center;"
        ),
        Style(checkout_css)
    ),Style(checkout_css)


@rt('/use_coupon/')
def apply_coupon(coupon: str):
    global discount, coupon_code
    temp_acc = OrangeIT.search_acc_by_id(config.account_now)
    
    if not temp_acc:
        return Style(error_css),P("‚ùå Error: Account not found", cls="error-message")

    total_price = temp_acc.get_cart_shopping().get_price_total()
    discount = OrangeIT.search_coupon_by_code(coupon)  # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏π‡∏õ‡∏≠‡∏á

    if discount != False:  
        coupon_code = coupon
        new_total = total_price - discount  # ‡∏´‡∏±‡∏Å‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î
        return P(f"üéâ ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î {discount} ‡∏ö‡∏≤‡∏ó Total: ‡∏ø{new_total:.2f}", cls="total-price")
    else:
        coupon_code = None
        return P("‚ùå ‡∏Ñ‡∏π‡∏õ‡∏≠‡∏á‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á", cls="error-message")


#payment    
@rt('/payment')
def post(full_name:str , address: str , city : str , postal_code: str , phone: str ):
    global order_id, discount, coupon_code
    if not config.account_now:
        return Div(P("account Not Found", cls="error-message"))
    acc = OrangeIT.search_acc_by_id(config.account_now)
    order_id = OrangeIT.create_order_acc(config.account_now, full_name, address, city, postal_code ,phone , discount, coupon_code)
    OrangeIT.clear_cart_account_by_id(config.account_now)
    return Style(payment_css), Div(
        Div(A(H1("ORANGE", cls="header-title"), href='/'), cls="header-container"),
        Div(
            H2("üí≥ Enter Your Credit Card Details",style='color:#000;'),
            Div(
                Form(
                    Label("Card Number:", For="card_number"),
                    Input(id="card_number", type="text", placeholder="1234 5678 9012 3456", required=True),

                    Label("Expiry Date:", For="expiry_date"),
                    Input(id="expiry_date", type="text", placeholder="MM/YY", required=True),

                    Label("CVC:", For="cvc"),
                    Input(id="cvc", type="text", placeholder="123", required=True),

                    Button('Pay Now', type="submit", hx_post='/confirm-payment', cls="pay-button"),
                    cls="card-form"
                ),
                cls="payment-container"
            ),
        ),
        Div(P("¬© 2025 OrAnGe Store | All Rights Reserved.", cls="footer"), cls="container")
    )

@rt('/confirm-payment/')
def post(card_number:str, expiry_date:str, cvc:str):
    global order_id
    card = OrangeIT.check_card(card_number, expiry_date, cvc)
    if not card:
        return Style(error_css),Div(P("‚ùå Card invalid", cls="error-message"),cls="error-box")
    
    order_total = OrangeIT.get_order_total(order_id, config.account_now)  # ‡∏î‡∏∂‡∏á‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠
    if card.get_amount() < order_total:
        return Style(error_css),Div(P("‚ùå Insufficient funds. Please use another card.", cls="error-message"),cls="error-box")  # ‡πÄ‡∏á‡∏¥‡∏ô‡πÑ‡∏°‡πà‡∏û‡∏≠

    # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏≠‡πá‡∏≠‡∏ö‡πÄ‡∏à‡πá‡∏Å‡∏ï‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡∏î‡πâ‡∏ß‡∏¢‡∏ö‡∏±‡∏ï‡∏£‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï
    payment = CreditCardPayment(order_total, card.get_card_number(), "Customer")

    if payment.process_payment():
        OrangeIT.deduct_amount_card(card, order_total)  # ‡∏´‡∏±‡∏Å‡πÄ‡∏á‡∏¥‡∏ô‡∏à‡∏≤‡∏Å‡∏ö‡∏±‡∏ï‡∏£
        OrangeIT.change_status_order(config.account_now,order_id,'Wait for shipping')
        OrangeIT.clear_cart_account_by_id(config.account_now)  # ‡∏•‡πâ‡∏≤‡∏á‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
        return Redirect('/')

    return Style(error_css),Div(P("‚ùå Payment failed. Please try again.", cls="error-message"),cls="error-box")  # ‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß


@rt('/view_myorder')
def get():
    if not config.account_now:
        return Style(error_css),Div(P("Account Not Found", cls="error-message"),cls="error-box")
    
    acc = OrangeIT.search_acc_by_id(config.account_now)
    orders = acc.get_myorder_lst()
    
    return Body(
        Div(
            H1(f'üì¶ ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏Ç‡∏≠‡∏á‡∏â‡∏±‡∏ô ({len(orders)})', cls='order-header'),
            Table(
                Tr(Th("Order ID"), Th("‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"), Th("‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞"), Th("‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà"), Th("‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°"), Th("‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î"), Th("‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô")),
                *[
                    Tr(
                        Td(order.get_id()),
                        Td(Ul(*[Li(item.get_product().get_name()) for item in order.get_list()]), cls="order-items"),
                        Td(order.get_status(), cls="order-status"),
                        Td(order.get_address(), cls="order-address"),
                        Td(f"‡∏ø{order.get_total_amount()}", cls="order-total"),
                        Td(Button("üîç", cls="view-btn", hx_post=f"/order_details/{order.get_id()}", hx_target="#order-details-container", hx_swap="innerHTML")),
                        
                        # ‚úÖ ‡∏™‡πà‡∏á‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÑ‡∏õ‡∏ó‡∏µ‡πà /re_payment_order ‡πÅ‡∏ó‡∏ô /view_myorder
                        Td(
                            Form(
                                Input(type="hidden", name="order", value=order.get_id()),  # ‡∏™‡πà‡∏á‡∏Ñ‡πà‡∏≤ order_id
                                Button("üí≥ Pay", type="submit", cls="pay-btn"),
                                action='/re_payment_order/',
                                method="post"
                            )
                        ) if order.get_status() == 'Wait For payment' else Td("")
                    ) 
                    for order in orders
                ],
                cls="order-table"
            ),
            Div(id="order-details-container", cls="order-details-container"),
            id="orders"
        ),
        Style(view_order)
    )


@rt('/re_payment_order/')
def post(order:int):
    global order_id
    order_id = order
    return Style(payment_css), Div(
        Div(A(H1("ORANGE", cls="header-title"), href='/'), cls="header-container"),
        Div(
            H2("üí≥ Enter Your Credit Card Details",style='color:#000;'),
            Div(
                Form(
                    Label("Card Number:", For="card_number"),
                    Input(id="card_number", type="text", placeholder="1234 5678 9012 3456", required=True),

                    Label("Expiry Date:", For="expiry_date"),
                    Input(id="expiry_date", type="text", placeholder="MM/YY", required=True),

                    Label("CVC:", For="cvc"),
                    Input(id="cvc", type="text", placeholder="123", required=True),

                    Button('Pay Now', type="submit", hx_post='/confirm-payment', cls="pay-button"),
                    cls="card-form"
                ),
                cls="payment-container"
            ),
        ),
        Div(P("¬© 2025 OrAnGe Store | All Rights Reserved.", cls="footer"), cls="container")
    )

@rt('/order_details/{order_id}')
def post(order_id: int):
    if not config.account_now:
        return Style(error_css),Div(P("Account Not Found", cls="error-message"))
    order = OrangeIT.search_order_by_id(config.account_now , order_id)
    if not order:
        return Style(error_css),Div(P("Order not found", cls="error-message"))
    
    return Div(
        H2(f"‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠ #{order.get_id()}", cls="order-detail-header"),
        P(f"‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: {order.get_status()}", cls="order-status"),
        P(f"‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏à‡∏±‡∏î‡∏™‡πà‡∏á: {order.get_address()}", cls="order-address"),
        P(f"‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°: ‡∏ø{order.get_total_amount()}", cls="order-total"),
        P(f"‡∏Ñ‡∏π‡∏õ‡∏≠‡∏á : {order.get_coupon()} ‡∏•‡∏î‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î : {OrangeIT.search_coupon_by_code(order.get_coupon())}", cls="order-total"),
        H3("‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤", cls="order-items-header"),
        Ul(
            *[Li(f"{item.get_product().get_name()} : {item.get_quantity()} ‡∏ä‡∏¥‡πâ‡∏ô (‡∏ø{item.get_price_product() * item.get_quantity()})") for item in order.get_list()]
        ),
        Button(
                    "‡∏õ‡∏¥‡∏î",
                    cls="close-btn",
                    hx_post="/clear_order_details",
                    hx_target="#order-details-container",
                    hx_swap="innerHTML"
                )

    ),Style(view_order)

@rt('/clear_order_details')
def post():
    return ""